<?xml version="1.0" encoding="UTF-8"?>
<beans:beans 
    
    xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       
        
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
    
    
       <context:annotation-config/> 
   <context:component-scan base-package="com.wirecard.ezlinkwebservices" />
   <!--context:component-scan base-package="com.wirecard.ezlinkwebservices.mapperdao"/-->
   
   <!-- Enables the Spring MVC @Controller programming model -->
	
        
         <!-- Enable annotation style of managing transactions --> 
    <tx:annotation-driven transaction-manager="transactionManager" /> 
   
   <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure 
		<context:property-placeholder location="/WEB-INF/jdbc.properties" file-encoding="UTF-8"/> -->
    
    <beans:bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          p:location="/WEB-INF/jdbc.properties" />
    

    


   <!--       
            <bean id="propertyConfigurer"
    class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="location" value="/WEB-INF/jdbc.properties" />
</bean>

<bean id="dataSource"
    class="org.springframework.jdbc.datasource.DriverManagerDataSource"
    p:driverClassName="${jdbc.driverClassName}"
    p:url="${jdbc.url}"
    p:username="${jdbc.username}"
    p:password="${jdbc.password}" 
p:acquireIncrement="10" 
      p:idleConnectionTestPeriod="60" 
      p:maxPoolSize="100"
    p:maxStatements="50"
      p:minPoolSize="10"
/>
-->

 <!-- Declare a datasource that has pooling capabilities  -->
    <beans:bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
    destroy-method="close" p:driverClass="${jdbc.driverClassName}"
    p:jdbcUrl="${jdbc.url}" p:user="${jdbc.username}" p:password="${jdbc.password}"
    p:acquireIncrement="10" p:idleConnectionTestPeriod="60" p:maxPoolSize="100"
    p:maxStatements="50" p:minPoolSize="10" /> 


    
    
    <!-- Declare a transaction manager  -->
    <beans:bean id="transactionManager"
    class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
    p:dataSource-ref="dataSource" /> 
        
       <!-- define the SqlSessionFactory, notice that configLocation is not needed when you use MapperFactoryBean  -->
    <beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="typeAliasesPackage" value="com.wirecard.ezlinkwebservices.dto" />  
  		<beans:property name="mapperLocations" value="classpath*:com/wirecard/ezlinkwebservices/mapper/dao/xml/*.xml" />
  		
        <beans:property name="configLocation" value="WEB-INF/sqlmap-config.xml" /> 
    </beans:bean>
        
        <beans:bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
         <!--<beans:property name="basePackage" value="${MapperInterfacePackage}" />-->
        <beans:property name="basePackage" value="com.wirecard.ezlinkwebservices.mapperdao"/> 
         
    </beans:bean> 
    <!-- ADD PERSISTENCE SUPPORT HERE (jpa, hibernate, etc) -->
    
   

    </beans:beans>